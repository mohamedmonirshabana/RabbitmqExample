{"version":3,"sources":["consume.ts"],"names":["amqp_connection_manager_1","require","checkQueue","channel","assertQueue","consume","connection","connect","createChannel","setup","__awaiter","_this","console","log","_a","sent","msg","Buffer","from","content","toString","ack","error","err_1"],"mappings":"y7CAAA,IAAAA,0BAAAC,QAAA,2BAGC,SAASC,WAAWC,GACjB,OAAOA,EAAQC,YAAY,QAK/B,SAAeC,mIAKX,6BAHUC,EAAaN,0BAAA,QAAKO,QAAQ,CAAC,qBAElB,OACnB,CAAA,EAAMD,EAAWE,cAAc,CAC3BC,MAAM,SAAON,GAAsB,OAAAO,UAAAC,OAAA,OAAA,EAAA,sEAE7B,OADFC,QAAQC,IAAI,gBACV,CAAA,EAAMX,WAAWC,kBAAjBW,EAAAC,OACAZ,EAAQE,QALC,OAKmB,SAACW,GAC1BJ,QAAQC,IAAI,uBAAwBI,OAAOC,KAAKF,EAAIG,SAASC,YAC7DjB,EAAQkB,IAAIL,gCANzBF,EAAAC,sCAUaH,QAAQU,MAAMC,+BAG/BX,QAAQC,IAAI,SACZR","file":"consume.min.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel, ConsumeMessage } from 'amqplib';\n\n function checkQueue(channel: ConfirmChannel){\n    return channel.assertQueue('Ledo');\n }\n\n\n\nasync function consume(){\n    try{\n        const connection = amqp.connect(['amqp://localhost']);\n    // const exchangeName = \"MonExtange\";\n    const quequeName = \"Ledo\";\n    await connection.createChannel({\n        setup:async (channel:ConfirmChannel) =>{\n            console.log(\"Start Consum\");\n              await checkQueue(channel) ;\n              channel.consume(quequeName, (msg: ConsumeMessage) => {\n                 console.log(\"New message received\", Buffer.from(msg.content).toString());\n                 channel.ack(msg);\n              });\n        }\n    });\n    } catch(err){console.error(err);}\n    \n}\nconsole.log(\"Start\");\nconsume();"]}