{"version":3,"sources":["procedure.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mEAA2C;AAG3C,IAAM,SAAS,GAAG,MAAM,CAAC;AACzB,IAAM,YAAY,GAAG,YAAY,CAAC;AAElC,SAAS,aAAa,CAAC,OAAuB;IAC1C,OAAO,OAAO,CAAC,cAAc,CAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC;AAED,SAAS,UAAU,CAAC,OAAuB;IACvC,OAAO,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AAC1C,CAAC;AAED,SAAS,IAAI,CAAC,OAAuB;IAChC,OAAO,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,YAAY,EAAC,EAAE,CAAC,CAAC;AAC1D,CAAC;AAED,SAAe,MAAM;;;;;;;oBACP,UAAU,GAAG,oCAAI,CAAC,OAAO,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAEhD,OAAO,GAAG,EAAC,cAAc,EAAE,QAAQ,EAAC,CAAC;oBAClB,qBAAM,UAAU,CAAC,aAAa,CAAE;4BACpD,IAAI,EAAC,IAAI;4BACV,KAAK,EAAC,UAAO,OAAuB;;;gDAChC,qBAAM,aAAa,CAAC,OAAO,CAAC,EAAA;;4CAA5B,SAA4B,CAAC;4CAC7B,qBAAM,UAAU,CAAC,OAAO,CAAC,EAAA;;4CAAzB,SAAyB,CAAC;4CAC1B,qBAAM,IAAI,CAAC,OAAO,CAAC,EAAA;;4CAAnB,SAAmB,CAAA;;;;iCACtB;yBACJ,CAAC,EAAA;;oBAPK,cAAc,GAAI,SAOvB;oBAEF,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC9B,qBAAM,cAAc,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,EAAA;;oBAApD,SAAoD,CAAC;oBACrD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;;;;;CAGpC;AACD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,MAAM,EAAE,CAAC","file":"procedure.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel } from 'amqplib';\n\nconst queuename = \"Ledo\";\nconst ExchangeName = \"MonExtange\";\n\nfunction checkExchange(channel: ConfirmChannel){\n    return channel.assertExchange( ExchangeName ,'direct');\n}\n\nfunction checkQueue(channel: ConfirmChannel){\n    return channel.assertQueue(queuename);\n}\n\nfunction bind(channel: ConfirmChannel){\n     return channel.bindQueue(queuename, ExchangeName,'');\n}\n\nasync function direct(){\n        const connection = amqp.connect(['amqp://localhost']);\n      \n        const message = {contentmessage: \"Mktoon\"};\n         const channelWrapper  = await connection.createChannel( {\n             json:true,\n            setup:async (channel: ConfirmChannel) =>{\n                await checkExchange(channel);\n                await checkQueue(channel);\n                await bind(channel)\n            }\n        });\n\n        console.log(\"Before sending\");\n        await channelWrapper.sendToQueue(queuename, message);\n        console.log(\"After sending\");\n\n\n}\nconsole.log(\"start\");\ndirect();"]}