{"version":3,"sources":["procedure.ts"],"names":["amqp_connection_manager_1","require","queuename","ExchangeName","checkExchange","channel","assertExchange","checkQueue","assertQueue","bind","bindQueue","direct","connection","connect","message","contentmessage","createChannel","json","setup","__awaiter","_this","_a","sent","channelWrapper","console","log","sendToQueue"],"mappings":"y7CAAA,IAAAA,0BAAAC,QAAA,2BAGMC,UAAY,OACZC,aAAe,aAErB,SAASC,cAAcC,GACnB,OAAOA,EAAQC,eAAgBH,aAAc,UAGjD,SAASI,WAAWF,GAChB,OAAOA,EAAQG,YAAYN,WAG/B,SAASO,KAAKJ,GACT,OAAOA,EAAQK,UAAUR,UAAWC,aAAa,IAGtD,SAAeQ,oIAIkB,OAHnBC,EAAaZ,0BAAA,QAAKa,QAAQ,CAAC,qBAE3BC,EAAU,CAACC,eAAgB,UACR,CAAA,EAAMH,EAAWI,cAAe,CACpDC,MAAK,EACNC,MAAM,SAAOb,GAAuB,OAAAc,UAAAC,OAAA,OAAA,EAAA,sEAChC,MAAA,CAAA,EAAMhB,cAAcC,WACpB,OADAgB,EAAAC,OACA,CAAA,EAAMf,WAAWF,WACjB,OADAgB,EAAAC,OACA,CAAA,EAAMb,KAAKJ,kBAAXgB,EAAAC,2BAKR,OAVOC,EAAkBF,EAAAC,OASzBE,QAAQC,IAAI,kBACZ,CAAA,EAAMF,EAAeG,YAAYxB,UAAWY,kBAA5CO,EAAAC,OACAE,QAAQC,IAAI,0BAIpBD,QAAQC,IAAI,SACZd","file":"procedure.min.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel } from 'amqplib';\n\nconst queuename = \"Ledo\";\nconst ExchangeName = \"MonExtange\";\n\nfunction checkExchange(channel: ConfirmChannel){\n    return channel.assertExchange( ExchangeName ,'direct');\n}\n\nfunction checkQueue(channel: ConfirmChannel){\n    return channel.assertQueue(queuename);\n}\n\nfunction bind(channel: ConfirmChannel){\n     return channel.bindQueue(queuename, ExchangeName,'');\n}\n\nasync function direct(){\n        const connection = amqp.connect(['amqp://localhost']);\n      \n        const message = {contentmessage: \"Mktoon\"};\n         const channelWrapper  = await connection.createChannel( {\n             json:true,\n            setup:async (channel: ConfirmChannel) =>{\n                await checkExchange(channel);\n                await checkQueue(channel);\n                await bind(channel)\n            }\n        });\n\n        console.log(\"Before sending\");\n        await channelWrapper.sendToQueue(queuename, message);\n        console.log(\"After sending\");\n\n\n}\nconsole.log(\"start\");\ndirect();"]}