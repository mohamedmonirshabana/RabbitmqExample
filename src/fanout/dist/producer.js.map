{"version":3,"sources":["producer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mEAA2C;AAI3C,IAAM,IAAI,GAAG,kBAAkB,CAAC;AAChC,IAAM,QAAQ,GAAG,UAAU,CAAC;AAC5B,IAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,IAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,IAAM,WAAW,GAAG,gBAAgB,CAAC;AACrC,IAAM,cAAc,GAAG,QAAQ,CAAC;AAEhC,SAAS,aAAa,CAAC,OAAwB;IAC3C,OAAO,OAAO,CAAC,cAAc,CAAC,QAAQ,EAAC,cAAc,CAAC,CAAC;AAC3D,CAAC;AAED,iDAAiD;AACjD,6CAA6C;AAC7C,IAAI;AAEJ,0CAA0C;AAC1C,yDAAyD;AACzD,IAAI;AAEJ,SAAe,QAAQ;;;;;;;oBACb,UAAU,GAAG,oCAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBAClC,KAAK,GAAG,EAAC,QAAQ,EAAC,UAAU,EAAC,CAAC;oBAC9B,KAAK,GAAG,EAAC,QAAQ,EAAC,aAAa,EAAC,CAAC;oBACjC,KAAK,GAAG,EAAC,QAAQ,EAAC,aAAa,EAAC,CAAC;oBAEhC,YAAY,GAAG,UAAU,CAAC,aAAa,CAAC;wBAC3C,IAAI,EAAE,IAAI;wBACV,KAAK,EAAE,UAAO,OAAuB;;gCACjC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gCACjC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gCACjC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gCAEjC,aAAa,CAAC,OAAO,CAAC,CAAC;gCACvB,sBAAsB;gCACtB,gBAAgB;gCAEhB,OAAO,CAAC,SAAS,CAAC,WAAW,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAC;gCAC3C,OAAO,CAAC,SAAS,CAAC,WAAW,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAC;gCAC3C,OAAO,CAAC,SAAS,CAAC,WAAW,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAC;;;6BAG9C;qBAEJ,CAAC,CAAC;oBAEH,qBAAM,YAAY,CAAC,WAAW,CAAC,WAAW,EAAC,KAAK,CAAC,EAAA;;oBAAjD,SAAiD,CAAC;oBAClD,qBAAM,YAAY,CAAC,WAAW,CAAC,WAAW,EAAC,KAAK,CAAC,EAAA;;oBAAjD,SAAiD,CAAC;oBAClD,qBAAM,YAAY,CAAC,WAAW,CAAC,WAAW,EAAC,KAAK,CAAC,EAAA;;oBAAjD,SAAiD,CAAC;;;;;CAErD;AAED,QAAQ,EAAE,CAAC","file":"producer.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel } from 'amqplib';\n\n\nconst host = 'amqp://localhost';\nconst Exchange = \"HuFanout\";\nconst queueName_1 = \"queueMessage_1\";\nconst queueName_2 = \"queueMessage_2\";\nconst queueName_3 = \"queueMessage_3\";\nconst typeofExchange = \"fanout\";\n\nfunction checkExchange(channel : ConfirmChannel){\n    return channel.assertExchange(Exchange,typeofExchange);\n}\n\n// function checkQueue(channel : ConfirmChannel){\n//     return channel.assertQueue(queueName);\n// }\n\n// function bind(channel: ConfirmChannel){\n//     //return channel.bindQueue(queueName,Exchange,'');\n// }\n\nasync function producer(){\n    const connection = amqp.connect([host]);\n    const msg_1 = {username:\"Medo Ali\"};\n    const msg_2 = {username:\"Saber Engle\"};\n    const msg_3 = {username:\"Keto kareem\"};\n\n     const connectqueue = connection.createChannel({\n        json: true,\n        setup: async (channel: ConfirmChannel) =>{\n            channel.assertQueue(queueName_1);\n            channel.assertQueue(queueName_2);\n            channel.assertQueue(queueName_3);\n\n            checkExchange(channel);\n            //checkQueue(channel);\n            //bind(channel);\n\n            channel.bindQueue(queueName_1,Exchange,'');\n            channel.bindQueue(queueName_2,Exchange,'');\n            channel.bindQueue(queueName_3,Exchange,'');\n            \n\n        }\n        \n    });\n\n    await connectqueue.sendToQueue(queueName_1,msg_1);\n    await connectqueue.sendToQueue(queueName_2,msg_2);\n    await connectqueue.sendToQueue(queueName_3,msg_3);\n    \n}\n\nproducer();\n"]}