{"version":3,"sources":["consumer2.ts"],"names":["amqp_connection_manager_1","require","host","Exchange","queueName","typeofExchange","checkQueue","channel","assertQueue","consumer2","connect","createChannel","json","setup","__awaiter","_this","consume","msg","console","log","content","toString","ack","_a","sent"],"mappings":"y7CAAA,IAAAA,0BAAAC,QAAA,2BAKMC,KAAO,mBACPC,SAAW,WACXC,UAAY,iBACZC,eAAiB,SAEvB,SAASC,WAAWC,GAChB,OAAOA,EAAQC,YAAYJ,WAG/B,SAAeK,iIAEX,MAAA,CAAA,EADmBT,0BAAA,QAAKU,QAAQ,CAACR,OAChBS,cAAc,CAC3BC,MAAM,EACNC,MAAO,SAAON,GAAuB,OAAAO,UAAAC,OAAA,OAAA,EAAA,sEAEjC,OADAT,WAAWC,GACX,CAAA,EAAMA,EAAQS,QAAQZ,UAAW,SAAAa,GAC7BC,QAAQC,IAAIF,EAAIG,QAAQC,YACxBd,EAAQe,IAAIL,oBAFhBM,EAAAC,kCAJRD,EAAAC,gBAYJf","file":"consumer2.min.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel} from 'amqplib';\nimport { json } from 'express';\n\n\nconst host = 'amqp://localhost';\nconst Exchange = \"HuFanout\";\nconst queueName = \"queueMessage_3\";\nconst typeofExchange = \"fanout\";\n\nfunction checkQueue(channel: ConfirmChannel){\n    return channel.assertQueue(queueName);\n}\n\nasync function consumer2(){\n    const connection = amqp.connect([host]);\n    await connection.createChannel({\n        json: true,\n        setup: async (channel: ConfirmChannel) =>{\n            checkQueue(channel);\n            await channel.consume(queueName, msg =>{\n                console.log(msg.content.toString());\n                channel.ack(msg);\n            })\n        }\n    });\n}\n\nconsumer2();"]}