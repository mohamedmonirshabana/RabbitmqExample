{"version":3,"sources":["consumer.ts"],"names":["amqp_connection_manager_1","require","host","Exchange","queueName","typeofExchange","checkQuee","channel","assertQueue","consumer","connect","createChannel","json","setup","__awaiter","_this","_a","sent","consume","msg","console","log","content","toString","ack"],"mappings":"y7CAAA,IAAAA,0BAAAC,QAAA,2BAKMC,KAAO,mBACPC,SAAW,WACXC,UAAY,iBACZC,eAAiB,SAEvB,SAASC,UAAUC,GACf,OAAQA,EAAQC,YAAYJ,WAGhC,SAAeK,gIAEX,MAAA,CAAA,EADmBT,0BAAA,QAAKU,QAAQ,CAACR,OAChBS,cAAc,CAC3BC,MAAM,EACNC,MAAM,SAAON,GAAuB,OAAAO,UAAAC,OAAA,OAAA,EAAA,sEAChC,MAAA,CAAA,EAAMT,UAAUC,kBAAhBS,EAAAC,OACAV,EAAQW,QAAQd,UAAU,SAAAe,GACtBC,QAAQC,IAAKF,EAAIG,QAAQC,YACzBhB,EAAQiB,IAAIL,gCANxBH,EAAAC,gBAYJR","file":"consumer.min.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel, ConsumeMessage } from 'amqplib';\nimport { json } from 'express';\n\n\nconst host = 'amqp://localhost';\nconst Exchange = \"HuFanout\";\nconst queueName = \"queueMessage_2\";\nconst typeofExchange = \"fanout\";\n\nfunction checkQuee(channel : ConfirmChannel){\n    return  channel.assertQueue(queueName);\n}\n\nasync function consumer(){\n    const connection = amqp.connect([host]);\n    await connection.createChannel({\n        json: true,\n        setup:async (channel: ConfirmChannel) =>{\n            await checkQuee(channel);\n            channel.consume(queueName,msg =>{\n                console.log( msg.content.toString());\n                channel.ack(msg);\n            });\n        }\n    });\n}\n\nconsumer();"]}