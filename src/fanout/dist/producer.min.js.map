{"version":3,"sources":["producer.ts"],"names":["amqp_connection_manager_1","require","host","Exchange","queueName_1","queueName_2","queueName_3","typeofExchange","checkExchange","channel","assertExchange","producer","connection","connect","msg_1","username","msg_2","msg_3","connectqueue","createChannel","json","setup","__awaiter","_this","assertQueue","bindQueue","sendToQueue","_a","sent"],"mappings":"y7CAAA,IAAAA,0BAAAC,QAAA,2BAIMC,KAAO,mBACPC,SAAW,WACXC,YAAc,iBACdC,YAAc,iBACdC,YAAc,iBACdC,eAAiB,SAEvB,SAASC,cAAcC,GACnB,OAAOA,EAAQC,eAAeP,SAASI,gBAW3C,SAAeI,0IA0BX,OAzBMC,EAAaZ,0BAAA,QAAKa,QAAQ,CAACX,OAC3BY,EAAQ,CAACC,SAAS,YAClBC,EAAQ,CAACD,SAAS,eAClBE,EAAQ,CAACF,SAAS,eAsBxB,CAAA,GApBOG,EAAeN,EAAWO,cAAc,CAC3CC,MAAM,EACNC,MAAO,SAAOZ,GAAuB,OAAAa,UAAAC,OAAA,OAAA,EAAA,sDACjCd,EAAQe,YAAYpB,aACpBK,EAAQe,YAAYnB,aACpBI,EAAQe,YAAYlB,aAEpBE,cAAcC,GAIdA,EAAQgB,UAAUrB,YAAYD,SAAS,IACvCM,EAAQgB,UAAUpB,YAAYF,SAAS,IACvCM,EAAQgB,UAAUnB,YAAYH,SAAS,gBAO5BuB,YAAYtB,YAAYU,WAC3C,OADAa,EAAAC,OACA,CAAA,EAAMV,EAAaQ,YAAYrB,YAAYW,WAC3C,OADAW,EAAAC,OACA,CAAA,EAAMV,EAAaQ,YAAYpB,YAAYW,kBAA3CU,EAAAC,gBAIJjB","file":"producer.min.js","sourcesContent":["import amqp from 'amqp-connection-manager';\nimport { ConfirmChannel } from 'amqplib';\n\n\nconst host = 'amqp://localhost';\nconst Exchange = \"HuFanout\";\nconst queueName_1 = \"queueMessage_1\";\nconst queueName_2 = \"queueMessage_2\";\nconst queueName_3 = \"queueMessage_3\";\nconst typeofExchange = \"fanout\";\n\nfunction checkExchange(channel : ConfirmChannel){\n    return channel.assertExchange(Exchange,typeofExchange);\n}\n\n// function checkQueue(channel : ConfirmChannel){\n//     return channel.assertQueue(queueName);\n// }\n\n// function bind(channel: ConfirmChannel){\n//     //return channel.bindQueue(queueName,Exchange,'');\n// }\n\nasync function producer(){\n    const connection = amqp.connect([host]);\n    const msg_1 = {username:\"Medo Ali\"};\n    const msg_2 = {username:\"Saber Engle\"};\n    const msg_3 = {username:\"Keto kareem\"};\n\n     const connectqueue = connection.createChannel({\n        json: true,\n        setup: async (channel: ConfirmChannel) =>{\n            channel.assertQueue(queueName_1);\n            channel.assertQueue(queueName_2);\n            channel.assertQueue(queueName_3);\n\n            checkExchange(channel);\n            //checkQueue(channel);\n            //bind(channel);\n\n            channel.bindQueue(queueName_1,Exchange,'');\n            channel.bindQueue(queueName_2,Exchange,'');\n            channel.bindQueue(queueName_3,Exchange,'');\n            \n\n        }\n        \n    });\n\n    await connectqueue.sendToQueue(queueName_1,msg_1);\n    await connectqueue.sendToQueue(queueName_2,msg_2);\n    await connectqueue.sendToQueue(queueName_3,msg_3);\n    \n}\n\nproducer();\n"]}